var WebSocket = require('ws');

exports.Service = function(conf){
    this.status_listener = conf.status_listener;
    this.calls = {};
    var calls = this.calls;
    this.next_rid = 0;
    if(conf.url != null)
	this.url = conf.url;
    else
	throw("no_url");
    
    var ws = new WebSocket(this.url);
    this.ws = ws;
    ws.on('open', function() {
        // websocket is connected
        conf.status_listener("connected");
    });
    
    ws.on('message', function (evt) {
        
	if(evt != null)
	{
            var data = JSON.parse(evt);
	    var rid = data.rid;
	    if(rid == null) 
		throw("No request ID (RID): " + evt);
	    
	    calls[rid].onreply(data);
	    
	    if(data.type == "stream-end" || 
	       data.type == "result" || 
	       data.type == "error") 
		delete calls[rid];
	}
    });
    ws.on('close', function() {
        // websocket was closed
        conf.status_listener("disconnected"); 
    });
}

exports.Service.prototype.call = function(call, onreply){
    var status_listener = this.status_listener;
    if(onreply == null)
	onreply = function(ReplyData){
	    status_listener(ReplyData)
	};
    var rid = this.next_rid++;
    this.calls[rid] = {onreply:onreply, type:"call"};
    var rpc_req = {type:"call", rid:rid, data:call};
    this.ws.send(JSON.stringify(rpc_req));
}
